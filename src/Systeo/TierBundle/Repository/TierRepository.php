<?php

namespace Systeo\TierBundle\Repository;

use Doctrine\ORM\QueryBuilder;
use Systeo\UserBundle\Entity\User;

/**
 * TierRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TierRepository extends \Doctrine\ORM\EntityRepository
{
    public function MyFindAll($data, User $user)
   {
       $queryBuilder = $this->createQueryBuilder('a');
       
       if(!$user->isAdmin()){
           //ajouter la jointure Ã  la team + condition
           $queryBuilder->leftJoin('a.teams', 'team')
           ->addSelect('team')
           ->where('team.id IN (:id)')
           ->setParameter('id', $user->getTeams());
           
       }
       
       $this->searchName($queryBuilder,$data);
      
       return $queryBuilder;
   }
   
   /*public function getNextCode($type){
       $queryBuilder = $this->createQueryBuilder('a');
       
       if($type === 'c'){
          $queryBuilder->where('a.client = :parmeter');
       }elseif($type === 'f'){
          $queryBuilder->where('a.fournisseur = :parmeter');
       }
       
       $queryBuilder->setParameter('parmeter', true);
       
       $query = $queryBuilder->getQuery();
       $results = $query->getResult();
       
       $tab[];
       
       foreach($results as $rt):
           if($type === 'c'){
            $tab[] = (int)$rt->getCodeClient();
         }elseif($type === 'f'){
            $tab[] = (int)$rt->getCodeFournisseur();
         }
       endforeach;
       
       if($tab){
           arsort($tab);
       }else{
           return '0001';
       }
      
      $retour = '';
      
      for($i=0; $i<(4-strlen($tab[0])); $i++){
          $retour .= "0";
      }
       
       return $retour.$tab[0];
       
       
   }*/


   /**
    * 
    * @param type $name
    */
   private function searchName(QueryBuilder $qb, $data)
   {
       if(isset($data['name']) && !empty($data['name'])){
           $qb->andWhere('a.rs like :name or a.firstName like :name or a.lastName like :name')
              ->setParameter('name', '%'.$data['name'].'%');
       }
   }
}
